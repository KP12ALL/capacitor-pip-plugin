{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import {PluginListenerHandle} from '@capacitor/core';\r\n\r\nexport interface PipState {\r\n  isInPictureInPictureMode: boolean;\r\n}\r\n\r\nexport declare type PipModeChangeListener = (state: PipState) => void;\r\n\r\nexport interface PipPlugin {\r\n  enable(): Promise<{ value: string }>;\r\n\r\n  disable(): Promise<{ value: string }>;\r\n\r\n  addListener(eventName: 'pipModeChange', listenerFunc: PipModeChangeListener): Promise<PluginListenerHandle> & PluginListenerHandle;\r\n}\r\n"]}